name: CI

on:
  push:
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets['GITHUB_TOKEN'] }}
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run ESLint on source
        run: yarn lint

      - name: Run tests
        run: yarn test:unit

  build-publish:
    if: github.ref == 'refs/heads/master'
    timeout-minutes: 30
    needs: test
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: 'macos-latest'
            build-args: '--target x86_64-apple-darwin'
          - name: 'windows-latest'
    runs-on: ${{ matrix.platform.name }}
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.name == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ncgmgr-v__VERSION__
          releaseName: "NCGMGR v__VERSION__"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.platform.build-args }}
